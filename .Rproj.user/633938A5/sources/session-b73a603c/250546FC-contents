---
title: "1 Importing Dataset"
subtitle: "Caso Control: Niños y adolescentes"
author: "Percy Soto-Becerra"
format: 
  html:
    toc: true
    number-sections: true
    embed-resources: true
    code-tools: true
    code-copy: true
    code-fold: show
    theme: litera
execute: 
  message: false
  warning: false
---

## Introducción

Este documento describe los pasos realizados para importar los datos proporcionados por el equipo del `Instituto Nacional de Salud`. Los datos proporcionados estuvieron anonimizados y contaron con una columna identificadora única `uuid` que hizo las veces de una llave primaria para relacionar los diversos conjuntos de datos entre sí. 

## Configuración inicial y carga de paquetes

```{r}
# Remove all objects in the working evironment
rm(list = ls())

# Check if the package pacman is available, if not, install it
if (!require("pacman")) install.packages("pacman")

# Unload all existing packages to avoid conflicts with previous versions
pacman::p_unload("all")

# Load required packages into the environment
pacman::p_load(tidyverse,
               vroom, 
               here, 
               rio, 
               janitor, 
               summarytools)
```

## Importar datos

Debido al gran tamaño de los datos, para algunas bases de datos se utilizó la función `vroom()` del paquete `{vroom}` para la importación de los datos. Este paquete tiene la ventaja de que ha sido optimizado para lidiar con grandes datos en tiempos computacionales razonablemente cortos.

### Datos de hospitalización

Los datos de hospitalización se importan a continuación:

```{r}
data_hospi <- import(here("Data/Raw/Database_HOSPITALIZATIONS.csv"))
```

Guardamos los datos en formato `*.rds` para tener un back-up de estos:

```{r}
export(data_hospi, here("Data/Raw/data_hospi.rds"))
```

Debido a que el estudio solo incluirá a los hospitalizados, procedemos a extraer la lista de `uuid` de las personas que se hospitalizaron alguna vez en todo el periodo de los datos, luego de eliminar los duplicados de `uuid - fecha de ingreso a hospitalización`.

```{r}
uuid_hospit <- data_hospi %>% 
  distinct(uuid, fecha_ingreso_hosp) %>% 
  select(uuid)  
```

Guardamos una copia de estos datos en formato `*.rds` para su posterior uso:

```{r}
export(uuid_hospit, here("Data/Raw/uuid_hospit.csv"))
```

```{r}
#| include: false
# Eliminamos el conjunto de datos de hospitalización para ahorrar memoria de trabajo:
rm(data_hospi)

# También liberamos la memoria de trabajao de otros procesos silentes:
gc()
```


### Datos de Netlab

```{r}
vars <- c("uuid", 
          "convResultado", 
          "Fecha_Hora_Registro_Orden",
          "FechaHoraColeccion", 
          "FechaRecepcionROM", 
          "edad", 
          "SexoPaciente", 
          "DepartamentoPacienteActual", 
          "ProvinciaPacienteActual",
          "DistritoPacienteActual", 
          "DepartamentoPacienteReniec", 
          "ProvinciaPacienteReniec", 
          "DistritoPacienteReniec", 
          "EstablecimientoOrigen", 
          "Fecha_Inicio_Sintomas", 
          "tipoSeguroSalud", 
          "EstablecimientoEnvio",
          "Institucion", 
          "EESSDepOrigen", 
          "EESSProvOrigen", 
          "EESSDistOrigen", 
          "EESS_LAB_Destino", 
          "codigoOrden", 
          "EstatusResultado")

data_netlab <- vroom(here("Data/Raw/TOTAL_NETLAB.csv"), 
                      col_select = all_of(vars),
                      delim = ";",
                      na = "NA", 
                      trim_ws = TRUE)

gc()
```

```{r}
data_netlab <- uuid_hospit %>% 
  left_join(data_netlab, by = "uuid")
```

```{r}
gc()
```

```{r}
export(data_netlab, here("Data/Raw/hospi_netlab.rds"))
```

```{r}
rm(data_netlab)
gc()
```

### Datos de SISCOVID

#### Parte 1

```{r}
data_siscovid <- vroom(here("Data/Raw/TOTAL_SISCOVID_part1.csv"), 
                      # col_select = all_of(vars),
                      delim = ";",
                      na = "NA", 
                      trim_ws = TRUE)

gc()
```

```{r}
data_siscovid <- uuid_hospit %>% 
  left_join(data_siscovid, by = "uuid")

gc()
```

```{r}
export(data_siscovid , here("Data/Raw/hospi_siscovid_part1.rds"))
```

```{r}
rm(data_siscovid)
gc()
```

#### Parte 2

```{r}
data_siscovid <- vroom(here("Data/Raw/TOTAL_SISCOVID_part2.csv"), 
                      # col_select = all_of(vars),
                      delim = ";",
                      na = "NA", 
                      trim_ws = TRUE)

gc()
```

```{r}
data_siscovid <- uuid_hospit %>% 
  left_join(data_siscovid, by = "uuid")

gc()
```

```{r}
export(data_siscovid , here("Data/Raw/hospi_siscovid_part2.rds"))
```

```{r}
rm(data_siscovid)
gc()
```

### Datos de SINADEF

```{r}
data_sinadef <- vroom(here("Data/Raw/TOTAL_SINADEF.csv"), 
                      delim = ";",
                      na = "NA", 
                      trim_ws = TRUE)

gc()
```

```{r}
data_sinadef <- data_sinadef %>% 
  mutate(muerte = "sí")
```

```{r}
data_sinadef <- uuid_hospit %>% 
  left_join(data_sinadef, by = "uuid")
```

```{r}
gc()
```

```{r}
export(data_sinadef, here("Data/Raw/hospi_sinadef.rds"))
```

```{r}
rm(data_sinadef)
gc()
```

### Datos de Total de Población

```{r}
data_reniec <- vroom(here("Data/Raw/TOTAL_TB.csv"), 
                      delim = ";",
                      na = "NA", 
                      trim_ws = TRUE)

gc()
```

```{r}
data_reniec <- uuid_hospit %>% 
  left_join(data_reniec, by = "uuid")
```

```{r}
gc()
```

```{r}
export(data_reniec, here("Data/Raw/hospi_reniec.rds"))
```

```{r}
rm(data_reniec)
gc()
```

### Datos de Vacunación

```{r}
data_vac <- vroom(here("Data/Raw/TOTAL_VACCINES.csv"), 
                      delim = ";",
                      na = "NA", 
                      trim_ws = TRUE)

gc()
```

```{r}
data_vac <- uuid_hospit %>% 
  left_join(data_vac, by = "uuid")
```

```{r}
gc()
```

```{r}
export(data_vac, here("Data/Raw/hospi_vac.rds"))
```

```{r}
rm(data_vac)
gc()
```

## Ticket de Reproducibilidad

```{r}
sessionInfo()
```

